<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 应用名称 -->
    <property name="APP_NAME" value="logtest" />
    <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
    <property name="LOG_HOME" value="${log.dir:-logs}/" />
    <!-- 日志输出格式：%d表示日期，%thread表示线程名，%- 5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
    <property name="ENCODER_PATTERN"
              value="%d{yyyy-MM-dd  HH:mm:ss.SSS} [%thread] %-5level %logger{80} - %msg%n" />
    <contextName>${APP_NAME}</contextName>
    
    <!-- 控制台日志：输出全部日志到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${ENCODER_PATTERN}</Pattern>
        </encoder>
    </appender>

    <!-- 文件日志：输出全部日志到文件 -->
    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<!--日志文件输出的文件名-->
            <fileNamePattern>${LOG_HOME}/webapp.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
        </encoder>
        <!--日志文件最大的大小-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>10MB</MaxFileSize>
		</triggeringPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

	<appender name="FRAME_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender"> 
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
			<fileNamePattern>${LOG_HOME}/frm.%d{yyyy-MM-dd}.log</fileNamePattern> 
			<maxHistory>120</maxHistory>  
		</rollingPolicy>
		<encoder>  
			<pattern>${ENCODER_PATTERN}</pattern> 
		</encoder>
	</appender>

    <!-- 错误日志：用于将错误日志输出到独立文件 -->
    <!-- <appender name="ERROR_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_ERR.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender> -->

    <!-- 独立输出的同步日志 -->
    <!-- <appender name="SYNC_FILE"  
    		  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_SYNC.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
        </encoder>
    </appender>

    <logger name="log.sync" level="DEBUG" addtivity="true">
        <appender-ref ref="SYNC_FILE" />
    </logger> -->

	
	<!-- 过滤掉spring和mybatis的一些无用的DEBUG信息 -->
    <logger name="org.springframework" additivity="false">
    	<level value="INFO" />
    	<appender-ref ref="FRAME_FILE" />
    </logger>
    <logger name="org.mybatis" additivity="false">
    	<level value="INFO" />
    	<appender-ref ref="FRAME_FILE" />
    </logger>
    <logger name="org.apache" level="INFO" additivity="true"/>
    <logger name="net.sf.json" level="ERROR" additivity="true"/>
        
    <!-- 日志输出级别 -->
	<root>
        <level value="TRACE" />
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <!-- <appender-ref ref="ERROR_FILE" /> -->
    </root>
</configuration>